 npm create vite@latest client


using above  command we are using vite 
and also folder will be created named client
folder contains public src folder and some other package.json ,index.html along with some other files 

here we are given option 
react -> javascript + swc(lighter and faster)

then go inside client folder 
and use npm i 
to install all dependencies of package.json 

after that we will use install 
tailwind vite 

now we will add all pages[about, profile, home, sigin, signout] inside src folder
we have to install react-router-dom
then we will add route in app.jsx


now we will work on individual component like Header 
here we will be having three section 
logo ->search bar -> navigation items 


 header will remain on top of each pages
 that's why it is defined at top of routes

 to install react icons 
 we will use 
 npm i react-icons


now we will all adding navigation links to header 
which will be remain invisible for small screens 
here we will use link so that we can easily switch to another domain 
without refreshing the page 

to use it we have to wrap li in link tag
 
 express is used for writing backend code and all apis 
 nodemon is used so that we don't have to restart the server for each change
 

 now we will be having api(backend code) and client(frontend code)


  to make package.json file 
  npm init -y 
  to add dependencies
  npm i name


to run the file from root directory 
we will use command 
node then file location 
like 
node api/index.js

we use nodemon in development and node in production

kya mastcheez hai bhai 

 "scripts": {
    "dev": "nodemon api/index.js",
    "start": "node api/index.js"
  },

using node run dev/start we can control the command 


CONNECT TO THE DATABASE
now we will connect to mongodb online database 
it will be facilitated by using mongoose 


for mongodb 
username : nitishkamath63590
password : nitishkamath63590

since we are uploading file on github or it is publicly available 
it is not recommended to expose the mongodb path 
that why we will use .env file 
for use of that file we need to install dotenv 
and will add this file to .gitignore

to use it
mongoose.connect(process.env.MONGO);


now we will create user model 
since we are connected to database 
so in order to prevent entry we have to define constraint  
so in api folder we will main user.model.js 
there we will define constraint for name, email, password, timstamp

now we will define various router at backend 
so main skeleton will be index.js from api folder 
here we will import various router 
and will give redirect as 
app.use("/api/user", userRouter);
and actual url will be 
localhost:3000/api/user/test[go to original file to check for end point ]

there are three level nesting 
index.js -> user.route.js -> user.controller.js 

index.js -> base url  
user.route.js -> end point
user.controller.js -> defintion

